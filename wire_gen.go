// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"fmt"
	"github.com/gin-gonic/gin"
	"github.com/lk153/go-template-gen/internal/env"
	"github.com/lk153/go-template-gen/internal/users"
	"github.com/lk153/go-template-gen/internal/yaml"
	"log"
	"os"
)

// Injectors from wire.go:

func InitializeRouter() (users.Controller, error) {
	model := users.InitModel()
	repo := users.InitRepo(model)
	service := users.InitService(repo)
	controller := users.InitController(service)
	return controller, nil
}

func InitEnv() (yaml.YamlProcessor, error) {
	envVars := env.InitEnvVars()
	yamlProcessor := yaml.InitYamlProcessor(envVars)
	return yamlProcessor, nil
}

// wire.go:

func Startup() {
	r := gin.Default()
	InitEnv()
	ctr, err := InitializeRouter()
	if err != nil {
		fmt.Println("SERVER ERROR:", err)
		os.Exit(1)
	}

	r.GET("/users", ctr.GetUsers)
	if err = r.Run(":8888"); err != nil {
		log.Fatalf("impossible to start server: %s", err)
	}
}
